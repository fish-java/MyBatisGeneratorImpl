<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE generatorConfiguration
        PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
        "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd">
<generatorConfiguration>
    <!--导入属性配置 -->
    <properties resource="generator.properties"/>

    <context id="default" targetRuntime="MyBatis3">

        <!-- JDBC的数据库连接，MyBatis通过连接数据库读取schema来做逆向工程 -->
        <jdbcConnection driverClass="${driverClass}"
                        connectionURL="${connectionURL}"
                        userId="${userId}">
        </jdbcConnection>

        <!-- Model模型生成器，用来生成我们的实体类
               targetProject     指定生成的代码的目录
               targetPackage     指定生成的包名
            实体类代码最终会生成在{当前项目更目录}/{targetProject}/{targetPackage}
        -->
        <javaModelGenerator targetProject="src/main/java" targetPackage="entity">

            <!-- 是否为实体类添加构造函数 -->
            <property name="constructorBased" value="true"/>

            <!-- 是否允许子包，即targetPackage.schemaName.tableName -->
            <property name="enableSubPackages" value="false"/>

            <!-- 建立的实体对象是否 不可改变，即生成的实体类会不会有setter方法 -->
            <property name="immutable" value="true"/>

            <!-- 给实体类添加一个父类 -->
            <!--<property name="rootClass" value="com.foo.louis.Hello"/>-->

            <!-- 是否对类CHAR类型的列的数据进行trim操作 -->
            <property name="trimStrings" value="true"/>
        </javaModelGenerator>

        <!--Mapper映射文件生成所在的目录 为每一个数据库的表生成对应的SqlMap文件 -->
        <sqlMapGenerator targetPackage="mapper"
                         targetProject="src/main/resources">
            <property name="enableSubPackages" value="false"/>
        </sqlMapGenerator>


        <!-- 生成的dao层的时候的参数，和上面的一样 -->
        <javaClientGenerator targetPackage="dao"
                             targetProject="src/main/java"
                             type="MIXEDMAPPER">

            <!-- 为生成的接口添加父类 -->
            <!--<property name="rootInterface" value="com.bar.FooDao"/>-->

        </javaClientGenerator>

        <!-- 解析数据库中的monkey表，生成的实体类的类名是Monkey -->
        <table tableName="monkey" domainObjectName="Monkey" />
    </context>
</generatorConfiguration>